# Archive Cleanup Script
# Generated: October 1, 2025
# Purpose: Move legacy, milestone, and deprecated files to archive structure

Write-Host "========================================" -ForegroundColor Cyan
Write-Host " Email Management Tool - Archive Cleanup" -ForegroundColor Yellow
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# 1. MILESTONE MARKERS - Move older completion files
Write-Host "[1/7] Moving milestone completion markers..." -ForegroundColor Green
$milestones = @(
    "SETUP_COMPLETE.md",
    "STYLING_FIX_COMPLETE.md",
    "UI_REFACTORING_COMPLETE.md",
    "DARK_THEME_FIX_COMPLETE.md",
    "TEST_SUITE_FIX_COMPLETE.md",
    "TEST_RESULTS_COMPLETE.md",
    "EMAIL_MANAGEMENT_FEATURES_COMPLETE.md",
    "UI_CONSISTENCY_FIX_COMPLETE.md",
    "TEST_SUITE_FIXES_COMPLETE.md",
    "COMPREHENSIVE_DARK_THEME_FIX.md"
)

foreach ($file in $milestones) {
    if (Test-Path $file) {
        Move-Item -Path $file -Destination "archive/milestones/" -Force
        Write-Host "  Moved: $file" -ForegroundColor Gray
    }
}

# 2. LEGACY TEMPLATES - Move old HTML files
Write-Host "[2/7] Moving legacy template files..." -ForegroundColor Green
$templates = @(
    "queue.html",
    "message_detail.html",
    "message_edit.html"
)

foreach ($file in $templates) {
    if (Test-Path $file) {
        Move-Item -Path $file -Destination "archive/old-templates/" -Force
        Write-Host "  Moved: $file" -ForegroundColor Gray
    }
}

# 3. BACKUP FILES - Move backup files
Write-Host "[3/7] Moving backup files..." -ForegroundColor Green
if (Test-Path "simple_app.py.backup_before_deletion") {
    Move-Item -Path "simple_app.py.backup_before_deletion" -Destination "archive/backups/" -Force
    Write-Host "  Moved: simple_app.py.backup_before_deletion" -ForegroundColor Gray
}

# 4. SYSTEM DUMPS - Move crash dumps
Write-Host "[4/7] Moving system dumps..." -ForegroundColor Green
if (Test-Path "bash.exe.stackdump") {
    Move-Item -Path "bash.exe.stackdump" -Destination "archive/system_dumps/" -Force
    Write-Host "  Moved: bash.exe.stackdump" -ForegroundColor Gray
}

# 5. TEST REPORTS - Move test artifacts
Write-Host "[5/7] Moving test reports..." -ForegroundColor Green
$test_files = @(
    "HONEST_TEST_REPORT.md",
    "check_test_results.py"
)

foreach ($file in $test_files) {
    if (Test-Path $file) {
        Move-Item -Path $file -Destination "archive/test-reports/" -Force
        Write-Host "  Moved: $file" -ForegroundColor Gray
    }
}

# 6. DEPRECATED DATABASES - Check for emails.db
Write-Host "[6/7] Checking for deprecated databases..." -ForegroundColor Green
if (Test-Path "emails.db") {
    $size = (Get-Item "emails.db").Length
    Write-Host "  Found emails.db ($size bytes)" -ForegroundColor Yellow
    Write-Host "  Manual decision needed: Is this active or legacy?" -ForegroundColor Yellow
    Write-Host "  If legacy, move to archive/databases/" -ForegroundColor Yellow
}

# 7. LESSER-USED LAUNCHERS - Move redundant batch files
Write-Host "[7/7] Moving lesser-used launchers..." -ForegroundColor Green
$launchers = @(
    "start.bat",
    "restart_app.bat"
)

foreach ($file in $launchers) {
    if (Test-Path $file) {
        Move-Item -Path $file -Destination "archive/launchers/" -Force
        Write-Host "  Moved: $file" -ForegroundColor Gray
    }
}

# Create archive notice files
Write-Host ""
Write-Host "Creating archive notices..." -ForegroundColor Green

$notice = @"
# Archive Notice

This directory contains historical files from the Email Management Tool project.

**Archived on**: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
**Reason**: Project cleanup - these files are no longer actively maintained but preserved for reference.

## Contents

- Milestone completion markers from previous development phases
- Legacy templates superseded by current implementation
- Backup files from major refactors
- System diagnostics and crash dumps
- Historical test reports
- Deprecated launchers and utilities

## Usage

These files are **read-only references**. Do not modify or integrate back into active codebase without review.

For current implementation details, see:
- `CLAUDE.md` - Main project documentation
- `STYLEGUIDE.md` - UI/UX standards
- `PERMANENT_TEST_ACCOUNTS.md` - Account configuration

---
Generated by archive_cleanup.ps1
"@

$notice | Out-File -FilePath "archive/README.md" -Encoding UTF8

Write-Host "  Created: archive/README.md" -ForegroundColor Gray

# Summary
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host " Archive Cleanup Complete!" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "Next steps:" -ForegroundColor Yellow
Write-Host "  1. Review archive/databases/ decision for emails.db" -ForegroundColor White
Write-Host "  2. Update CLAUDE.md File Organization section" -ForegroundColor White
Write-Host "  3. Commit changes with: git add . && git commit -m 'Archive cleanup'" -ForegroundColor White
Write-Host ""
